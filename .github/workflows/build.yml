name: build

on:
  push:
    branches:
      - main
      - 'feature/**'
    tags:
      - v*

jobs:

  test:
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: setup go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15

      - name: test
        run: |
          curl -L https://github.com/gotestyourself/gotestsum/releases/download/v0.6.0/gotestsum_0.6.0_linux_amd64.tar.gz | sudo tar -C /usr/local/bin -xz
          gotestsum --format short-verbose --no-summary=skipped ./...

  build:
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64]

    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: setup go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15

      - name: prepare dist directory
        run: |
          mkdir -p dist/
          cp Dockerfile dist/

      - name: build
        env:
          CGO_ENABLED: 0
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          mkdir $GITHUB_WORKSPACE/dist/${{ matrix.goos }}_${{ matrix.goarch }}
          go build -ldflags="-s -w" -o $GITHUB_WORKSPACE/dist/${{ matrix.goos }}_${{ matrix.goarch }}

      - name: store artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: |
            dist

  release:
    name: release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.event.release.tag_name, 'v')

    steps:
      - name: download artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist

      - name: build docker image
        shell: bash
        run: |
          docker build . -t grpc-ditto
