// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mocking_service.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_struct "github.com/golang/protobuf/ptypes/struct"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AddMockRequest struct {
	Mock                 *DittoMock `protobuf:"bytes,1,opt,name=mock,proto3" json:"mock,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *AddMockRequest) Reset()         { *m = AddMockRequest{} }
func (m *AddMockRequest) String() string { return proto.CompactTextString(m) }
func (*AddMockRequest) ProtoMessage()    {}
func (*AddMockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e41e7380a15003da, []int{0}
}

func (m *AddMockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddMockRequest.Unmarshal(m, b)
}
func (m *AddMockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddMockRequest.Marshal(b, m, deterministic)
}
func (m *AddMockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddMockRequest.Merge(m, src)
}
func (m *AddMockRequest) XXX_Size() int {
	return xxx_messageInfo_AddMockRequest.Size(m)
}
func (m *AddMockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddMockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddMockRequest proto.InternalMessageInfo

func (m *AddMockRequest) GetMock() *DittoMock {
	if m != nil {
		return m.Mock
	}
	return nil
}

type AddMockResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddMockResponse) Reset()         { *m = AddMockResponse{} }
func (m *AddMockResponse) String() string { return proto.CompactTextString(m) }
func (*AddMockResponse) ProtoMessage()    {}
func (*AddMockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e41e7380a15003da, []int{1}
}

func (m *AddMockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddMockResponse.Unmarshal(m, b)
}
func (m *AddMockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddMockResponse.Marshal(b, m, deterministic)
}
func (m *AddMockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddMockResponse.Merge(m, src)
}
func (m *AddMockResponse) XXX_Size() int {
	return xxx_messageInfo_AddMockResponse.Size(m)
}
func (m *AddMockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddMockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddMockResponse proto.InternalMessageInfo

type DittoMock struct {
	Request              *DittoRequest  `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	Response             *DittoResponse `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DittoMock) Reset()         { *m = DittoMock{} }
func (m *DittoMock) String() string { return proto.CompactTextString(m) }
func (*DittoMock) ProtoMessage()    {}
func (*DittoMock) Descriptor() ([]byte, []int) {
	return fileDescriptor_e41e7380a15003da, []int{2}
}

func (m *DittoMock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DittoMock.Unmarshal(m, b)
}
func (m *DittoMock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DittoMock.Marshal(b, m, deterministic)
}
func (m *DittoMock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DittoMock.Merge(m, src)
}
func (m *DittoMock) XXX_Size() int {
	return xxx_messageInfo_DittoMock.Size(m)
}
func (m *DittoMock) XXX_DiscardUnknown() {
	xxx_messageInfo_DittoMock.DiscardUnknown(m)
}

var xxx_messageInfo_DittoMock proto.InternalMessageInfo

func (m *DittoMock) GetRequest() *DittoRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *DittoMock) GetResponse() *DittoResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

// DittoRequest represents request matching object. It matches requests first by method and then by patterns.
// All patterns must match in order for a request to match.
// If no matches are found the service will return ``Unimplemented`` grpc error.
// If there multiple matches are found the first one is what gets returned, the other ones will be ignored.
type DittoRequest struct {
	// fully qualified grpc method like ``/videa.relyingparty.proto.types.RelyingPartyService/Delete``
	Method               string              `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	BodyPatterns         []*DittoBodyPattern `protobuf:"bytes,2,rep,name=body_patterns,json=bodyPatterns,proto3" json:"body_patterns,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *DittoRequest) Reset()         { *m = DittoRequest{} }
func (m *DittoRequest) String() string { return proto.CompactTextString(m) }
func (*DittoRequest) ProtoMessage()    {}
func (*DittoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e41e7380a15003da, []int{3}
}

func (m *DittoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DittoRequest.Unmarshal(m, b)
}
func (m *DittoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DittoRequest.Marshal(b, m, deterministic)
}
func (m *DittoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DittoRequest.Merge(m, src)
}
func (m *DittoRequest) XXX_Size() int {
	return xxx_messageInfo_DittoRequest.Size(m)
}
func (m *DittoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DittoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DittoRequest proto.InternalMessageInfo

func (m *DittoRequest) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *DittoRequest) GetBodyPatterns() []*DittoBodyPattern {
	if m != nil {
		return m.BodyPatterns
	}
	return nil
}

type DittoResponse struct {
	// Struct conveniently represents any object that doesn't have a strict schema
	Body                 *_struct.Struct `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DittoResponse) Reset()         { *m = DittoResponse{} }
func (m *DittoResponse) String() string { return proto.CompactTextString(m) }
func (*DittoResponse) ProtoMessage()    {}
func (*DittoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e41e7380a15003da, []int{4}
}

func (m *DittoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DittoResponse.Unmarshal(m, b)
}
func (m *DittoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DittoResponse.Marshal(b, m, deterministic)
}
func (m *DittoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DittoResponse.Merge(m, src)
}
func (m *DittoResponse) XXX_Size() int {
	return xxx_messageInfo_DittoResponse.Size(m)
}
func (m *DittoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DittoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DittoResponse proto.InternalMessageInfo

func (m *DittoResponse) GetBody() *_struct.Struct {
	if m != nil {
		return m.Body
	}
	return nil
}

type DittoBodyPattern struct {
	// Types that are valid to be assigned to Pattern:
	//	*DittoBodyPattern_EqualToJson
	//	*DittoBodyPattern_MatchesJsonpath
	Pattern              isDittoBodyPattern_Pattern `protobuf_oneof:"pattern"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *DittoBodyPattern) Reset()         { *m = DittoBodyPattern{} }
func (m *DittoBodyPattern) String() string { return proto.CompactTextString(m) }
func (*DittoBodyPattern) ProtoMessage()    {}
func (*DittoBodyPattern) Descriptor() ([]byte, []int) {
	return fileDescriptor_e41e7380a15003da, []int{5}
}

func (m *DittoBodyPattern) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DittoBodyPattern.Unmarshal(m, b)
}
func (m *DittoBodyPattern) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DittoBodyPattern.Marshal(b, m, deterministic)
}
func (m *DittoBodyPattern) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DittoBodyPattern.Merge(m, src)
}
func (m *DittoBodyPattern) XXX_Size() int {
	return xxx_messageInfo_DittoBodyPattern.Size(m)
}
func (m *DittoBodyPattern) XXX_DiscardUnknown() {
	xxx_messageInfo_DittoBodyPattern.DiscardUnknown(m)
}

var xxx_messageInfo_DittoBodyPattern proto.InternalMessageInfo

type isDittoBodyPattern_Pattern interface {
	isDittoBodyPattern_Pattern()
}

type DittoBodyPattern_EqualToJson struct {
	EqualToJson *_struct.Struct `protobuf:"bytes,1,opt,name=equal_to_json,json=equalToJson,proto3,oneof"`
}

type DittoBodyPattern_MatchesJsonpath struct {
	MatchesJsonpath *JSONPathPattern `protobuf:"bytes,2,opt,name=matches_jsonpath,json=matchesJsonpath,proto3,oneof"`
}

func (*DittoBodyPattern_EqualToJson) isDittoBodyPattern_Pattern() {}

func (*DittoBodyPattern_MatchesJsonpath) isDittoBodyPattern_Pattern() {}

func (m *DittoBodyPattern) GetPattern() isDittoBodyPattern_Pattern {
	if m != nil {
		return m.Pattern
	}
	return nil
}

func (m *DittoBodyPattern) GetEqualToJson() *_struct.Struct {
	if x, ok := m.GetPattern().(*DittoBodyPattern_EqualToJson); ok {
		return x.EqualToJson
	}
	return nil
}

func (m *DittoBodyPattern) GetMatchesJsonpath() *JSONPathPattern {
	if x, ok := m.GetPattern().(*DittoBodyPattern_MatchesJsonpath); ok {
		return x.MatchesJsonpath
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*DittoBodyPattern) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*DittoBodyPattern_EqualToJson)(nil),
		(*DittoBodyPattern_MatchesJsonpath)(nil),
	}
}

// JSONPath pattern supports JSONPath spec
//
//Examples
//^^^^^^^^
//
//{ "expression": "$.message_type", "eq": "resource" }
//{ "expression": "$.message_type", "contains": "re" }
//{ "expression": "$.name", "regexp": "^callback[-]svc.*$" }
type JSONPathPattern struct {
	Expression string `protobuf:"bytes,1,opt,name=expression,proto3" json:"expression,omitempty"`
	// Types that are valid to be assigned to Operator:
	//	*JSONPathPattern_Contains
	//	*JSONPathPattern_Eq
	//	*JSONPathPattern_Regexp
	Operator             isJSONPathPattern_Operator `protobuf_oneof:"operator"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *JSONPathPattern) Reset()         { *m = JSONPathPattern{} }
func (m *JSONPathPattern) String() string { return proto.CompactTextString(m) }
func (*JSONPathPattern) ProtoMessage()    {}
func (*JSONPathPattern) Descriptor() ([]byte, []int) {
	return fileDescriptor_e41e7380a15003da, []int{6}
}

func (m *JSONPathPattern) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JSONPathPattern.Unmarshal(m, b)
}
func (m *JSONPathPattern) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JSONPathPattern.Marshal(b, m, deterministic)
}
func (m *JSONPathPattern) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JSONPathPattern.Merge(m, src)
}
func (m *JSONPathPattern) XXX_Size() int {
	return xxx_messageInfo_JSONPathPattern.Size(m)
}
func (m *JSONPathPattern) XXX_DiscardUnknown() {
	xxx_messageInfo_JSONPathPattern.DiscardUnknown(m)
}

var xxx_messageInfo_JSONPathPattern proto.InternalMessageInfo

func (m *JSONPathPattern) GetExpression() string {
	if m != nil {
		return m.Expression
	}
	return ""
}

type isJSONPathPattern_Operator interface {
	isJSONPathPattern_Operator()
}

type JSONPathPattern_Contains struct {
	Contains string `protobuf:"bytes,2,opt,name=contains,proto3,oneof"`
}

type JSONPathPattern_Eq struct {
	Eq string `protobuf:"bytes,3,opt,name=eq,proto3,oneof"`
}

type JSONPathPattern_Regexp struct {
	Regexp string `protobuf:"bytes,4,opt,name=regexp,proto3,oneof"`
}

func (*JSONPathPattern_Contains) isJSONPathPattern_Operator() {}

func (*JSONPathPattern_Eq) isJSONPathPattern_Operator() {}

func (*JSONPathPattern_Regexp) isJSONPathPattern_Operator() {}

func (m *JSONPathPattern) GetOperator() isJSONPathPattern_Operator {
	if m != nil {
		return m.Operator
	}
	return nil
}

func (m *JSONPathPattern) GetContains() string {
	if x, ok := m.GetOperator().(*JSONPathPattern_Contains); ok {
		return x.Contains
	}
	return ""
}

func (m *JSONPathPattern) GetEq() string {
	if x, ok := m.GetOperator().(*JSONPathPattern_Eq); ok {
		return x.Eq
	}
	return ""
}

func (m *JSONPathPattern) GetRegexp() string {
	if x, ok := m.GetOperator().(*JSONPathPattern_Regexp); ok {
		return x.Regexp
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*JSONPathPattern) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*JSONPathPattern_Contains)(nil),
		(*JSONPathPattern_Eq)(nil),
		(*JSONPathPattern_Regexp)(nil),
	}
}

type ClearRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClearRequest) Reset()         { *m = ClearRequest{} }
func (m *ClearRequest) String() string { return proto.CompactTextString(m) }
func (*ClearRequest) ProtoMessage()    {}
func (*ClearRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e41e7380a15003da, []int{7}
}

func (m *ClearRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearRequest.Unmarshal(m, b)
}
func (m *ClearRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearRequest.Marshal(b, m, deterministic)
}
func (m *ClearRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearRequest.Merge(m, src)
}
func (m *ClearRequest) XXX_Size() int {
	return xxx_messageInfo_ClearRequest.Size(m)
}
func (m *ClearRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClearRequest proto.InternalMessageInfo

type ClearResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClearResponse) Reset()         { *m = ClearResponse{} }
func (m *ClearResponse) String() string { return proto.CompactTextString(m) }
func (*ClearResponse) ProtoMessage()    {}
func (*ClearResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e41e7380a15003da, []int{8}
}

func (m *ClearResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearResponse.Unmarshal(m, b)
}
func (m *ClearResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearResponse.Marshal(b, m, deterministic)
}
func (m *ClearResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearResponse.Merge(m, src)
}
func (m *ClearResponse) XXX_Size() int {
	return xxx_messageInfo_ClearResponse.Size(m)
}
func (m *ClearResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClearResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*AddMockRequest)(nil), "grpcditto.proto.AddMockRequest")
	proto.RegisterType((*AddMockResponse)(nil), "grpcditto.proto.AddMockResponse")
	proto.RegisterType((*DittoMock)(nil), "grpcditto.proto.DittoMock")
	proto.RegisterType((*DittoRequest)(nil), "grpcditto.proto.DittoRequest")
	proto.RegisterType((*DittoResponse)(nil), "grpcditto.proto.DittoResponse")
	proto.RegisterType((*DittoBodyPattern)(nil), "grpcditto.proto.DittoBodyPattern")
	proto.RegisterType((*JSONPathPattern)(nil), "grpcditto.proto.JSONPathPattern")
	proto.RegisterType((*ClearRequest)(nil), "grpcditto.proto.ClearRequest")
	proto.RegisterType((*ClearResponse)(nil), "grpcditto.proto.ClearResponse")
}

func init() { proto.RegisterFile("mocking_service.proto", fileDescriptor_e41e7380a15003da) }

var fileDescriptor_e41e7380a15003da = []byte{
	// 502 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0x4d, 0x8f, 0x12, 0x41,
	0x10, 0xdd, 0x19, 0x10, 0x98, 0xe2, 0x63, 0xb0, 0x13, 0xdd, 0x09, 0x59, 0x11, 0xe7, 0x44, 0x62,
	0x32, 0x9b, 0xe0, 0xc1, 0xc4, 0x68, 0xa2, 0x68, 0x56, 0x42, 0x44, 0x49, 0xe3, 0xc9, 0x0b, 0x69,
	0x66, 0xda, 0x61, 0x5c, 0x98, 0x6e, 0xba, 0x1b, 0xb3, 0x7b, 0xf3, 0xe6, 0x3f, 0xf1, 0xa0, 0x7f,
	0xd2, 0xd0, 0xdd, 0x8b, 0x2c, 0x2c, 0xf1, 0x36, 0x55, 0xf3, 0xde, 0xab, 0xea, 0x7a, 0x55, 0xf0,
	0x60, 0xc9, 0xe2, 0xcb, 0x2c, 0x4f, 0xa7, 0x92, 0x8a, 0xef, 0x59, 0x4c, 0x23, 0x2e, 0x98, 0x62,
	0xc8, 0x4f, 0x05, 0x8f, 0x93, 0x4c, 0x29, 0x66, 0x12, 0xad, 0xb3, 0x94, 0xb1, 0x74, 0x41, 0xcf,
	0x75, 0x34, 0x5b, 0x7f, 0x3d, 0x97, 0x4a, 0xac, 0x63, 0x65, 0xfe, 0x86, 0xaf, 0xa1, 0xf1, 0x26,
	0x49, 0x46, 0x2c, 0xbe, 0xc4, 0x74, 0xb5, 0xa6, 0x52, 0xa1, 0x08, 0x8a, 0x1b, 0xe5, 0xc0, 0xe9,
	0x38, 0xdd, 0x6a, 0xaf, 0x15, 0xed, 0xe9, 0x45, 0xef, 0x36, 0xdf, 0x9a, 0xa0, 0x71, 0xe1, 0x7d,
	0xf0, 0xb7, 0x0a, 0x92, 0xb3, 0x5c, 0xd2, 0xf0, 0x87, 0x03, 0xde, 0x16, 0x86, 0x9e, 0x43, 0x59,
	0x18, 0x6d, 0xab, 0xf9, 0xe8, 0x6e, 0x4d, 0xdb, 0x00, 0xbe, 0x41, 0xa3, 0x17, 0x50, 0x11, 0x56,
	0x32, 0x70, 0x35, 0xb3, 0x7d, 0x8c, 0x69, 0x50, 0x78, 0x8b, 0x0f, 0x73, 0xa8, 0xed, 0x8a, 0xa2,
	0x87, 0x50, 0x5a, 0x52, 0x35, 0x67, 0x89, 0xee, 0xc1, 0xc3, 0x36, 0x42, 0x17, 0x50, 0x9f, 0xb1,
	0xe4, 0x7a, 0xca, 0x89, 0x52, 0x54, 0xe4, 0x32, 0x70, 0x3b, 0x85, 0x6e, 0xb5, 0xf7, 0xe4, 0xee,
	0x42, 0x7d, 0x96, 0x5c, 0x8f, 0x0d, 0x12, 0xd7, 0x66, 0xff, 0x02, 0x19, 0xbe, 0x84, 0xfa, 0xad,
	0x56, 0xd0, 0x53, 0x28, 0x6e, 0x00, 0xf6, 0xc9, 0xa7, 0x91, 0x71, 0x21, 0xba, 0x71, 0x21, 0x9a,
	0x68, 0x17, 0xb0, 0x06, 0x85, 0x7f, 0x1c, 0x68, 0xee, 0x17, 0x40, 0xaf, 0xa0, 0x4e, 0x57, 0x6b,
	0xb2, 0x98, 0x2a, 0x36, 0xfd, 0x26, 0x59, 0xfe, 0x1f, 0xa9, 0xc1, 0x09, 0xae, 0x6a, 0xfc, 0x67,
	0x36, 0x94, 0x2c, 0x47, 0x23, 0x68, 0x2e, 0x89, 0x8a, 0xe7, 0x54, 0x6a, 0x36, 0x27, 0x6a, 0x6e,
	0xa7, 0xd8, 0x39, 0x78, 0xdc, 0x70, 0xf2, 0xe9, 0xe3, 0x98, 0xa8, 0xb9, 0x2d, 0x3d, 0x38, 0xc1,
	0xbe, 0xe5, 0x0e, 0x2d, 0xb5, 0xef, 0x41, 0xd9, 0xce, 0x28, 0xfc, 0xe9, 0x80, 0xbf, 0xc7, 0x40,
	0x6d, 0x00, 0x7a, 0xc5, 0x05, 0x95, 0x32, 0xb3, 0x9d, 0x7a, 0x78, 0x27, 0x83, 0xce, 0xa0, 0x12,
	0xb3, 0x5c, 0x91, 0x4c, 0x8f, 0xd8, 0xe9, 0x7a, 0x83, 0x13, 0xbc, 0xcd, 0xa0, 0x26, 0xb8, 0x74,
	0x15, 0x14, 0x6c, 0xde, 0xa5, 0x2b, 0x14, 0x40, 0x49, 0xd0, 0x94, 0x5e, 0xf1, 0xa0, 0x68, 0xb3,
	0x36, 0xee, 0x03, 0x54, 0x18, 0xa7, 0x82, 0x28, 0x26, 0xc2, 0x06, 0xd4, 0xde, 0x2e, 0x28, 0x11,
	0xd6, 0xe5, 0xd0, 0x87, 0xba, 0x8d, 0x8d, 0x0b, 0xbd, 0x5f, 0x0e, 0x34, 0x46, 0xe6, 0x4e, 0x26,
	0xe6, 0x4c, 0xd0, 0x07, 0x28, 0xdb, 0x7d, 0x45, 0x8f, 0x0f, 0x06, 0x71, 0xfb, 0x16, 0x5a, 0x9d,
	0xe3, 0x00, 0x6b, 0xf3, 0x05, 0xdc, 0xd3, 0x15, 0xd1, 0xe1, 0x52, 0xef, 0x76, 0xd6, 0x6a, 0x1f,
	0xfb, 0x6d, 0x74, 0xfa, 0xa7, 0x5f, 0x0a, 0x84, 0x67, 0xbf, 0x5d, 0xff, 0xbd, 0xe0, 0xb1, 0x5e,
	0x85, 0x68, 0xac, 0xfd, 0x2d, 0x69, 0xf4, 0xb3, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xfb, 0x9c,
	0x51, 0xa6, 0xef, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MockingServiceClient is the client API for MockingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MockingServiceClient interface {
	// AddMock adds new mock to the server
	AddMock(ctx context.Context, in *AddMockRequest, opts ...grpc.CallOption) (*AddMockResponse, error)
	// Delete all mocks
	Clear(ctx context.Context, in *ClearRequest, opts ...grpc.CallOption) (*ClearResponse, error)
}

type mockingServiceClient struct {
	cc *grpc.ClientConn
}

func NewMockingServiceClient(cc *grpc.ClientConn) MockingServiceClient {
	return &mockingServiceClient{cc}
}

func (c *mockingServiceClient) AddMock(ctx context.Context, in *AddMockRequest, opts ...grpc.CallOption) (*AddMockResponse, error) {
	out := new(AddMockResponse)
	err := c.cc.Invoke(ctx, "/grpcditto.proto.MockingService/AddMock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mockingServiceClient) Clear(ctx context.Context, in *ClearRequest, opts ...grpc.CallOption) (*ClearResponse, error) {
	out := new(ClearResponse)
	err := c.cc.Invoke(ctx, "/grpcditto.proto.MockingService/Clear", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MockingServiceServer is the server API for MockingService service.
type MockingServiceServer interface {
	// AddMock adds new mock to the server
	AddMock(context.Context, *AddMockRequest) (*AddMockResponse, error)
	// Delete all mocks
	Clear(context.Context, *ClearRequest) (*ClearResponse, error)
}

// UnimplementedMockingServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMockingServiceServer struct {
}

func (*UnimplementedMockingServiceServer) AddMock(ctx context.Context, req *AddMockRequest) (*AddMockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddMock not implemented")
}
func (*UnimplementedMockingServiceServer) Clear(ctx context.Context, req *ClearRequest) (*ClearResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Clear not implemented")
}

func RegisterMockingServiceServer(s *grpc.Server, srv MockingServiceServer) {
	s.RegisterService(&_MockingService_serviceDesc, srv)
}

func _MockingService_AddMock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddMockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MockingServiceServer).AddMock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcditto.proto.MockingService/AddMock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MockingServiceServer).AddMock(ctx, req.(*AddMockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MockingService_Clear_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClearRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MockingServiceServer).Clear(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcditto.proto.MockingService/Clear",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MockingServiceServer).Clear(ctx, req.(*ClearRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MockingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpcditto.proto.MockingService",
	HandlerType: (*MockingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddMock",
			Handler:    _MockingService_AddMock_Handler,
		},
		{
			MethodName: "Clear",
			Handler:    _MockingService_Clear_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mocking_service.proto",
}
